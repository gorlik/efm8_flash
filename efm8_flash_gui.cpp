// -*- C++ -*-
//
// generated by wxGlade 0.8.3 on Tue Mar 17 14:16:07 2020
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//

#include "efm8_flash_gui.h"
#include "efm8_flash_lib.h"
#include "gglabs_logo.h"

// begin wxGlade: ::extracode
// end wxGlade
#include <wx/file.h>
#include <wx/aboutdlg.h>


MyFrame::MyFrame(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxFrame(parent, id, title, pos, size, wxDEFAULT_FRAME_STYLE)
{
    timer = new wxTimer(this,10);
    efm8_found=0;
    
    // begin wxGlade: MyFrame::MyFrame
    panel_2 = new wxPanel(this, wxID_ANY);
    panel_1 = new wxPanel(this, wxID_ANY);
    statusbar = CreateStatusBar(2, wxSTB_DEFAULT_STYLE);
    label_file = new wxStaticText(panel_1, wxID_ANY, wxT("File:"));
    label_size = new wxStaticText(panel_1, wxID_ANY, wxT("Size:"));
    browse_button = new wxButton(panel_1, 4, wxT("Browse..."));
    about_button = new wxButton(panel_2, 1, wxT("About"));
    flash_button = new wxButton(panel_2, 2, wxT("Flash"));
    exit_button = new wxButton(panel_2, 3, wxT("Exit"));

    set_properties();
    do_layout();
    // end wxGlade
}


void MyFrame::set_properties()
{
    // begin wxGlade: MyFrame::set_properties
    SetTitle(wxT("EFM8 USB Flash Tool"));
    int statusbar_widths[] = { -1, -1 };
    statusbar->SetStatusWidths(2, statusbar_widths);
    
    // statusbar fields
    const wxString statusbar_fields[] = {
        wxT("No EFM8 connected"),
        wxEmptyString,
    };
    for(int i = 0; i < statusbar->GetFieldsCount(); ++i) {
        statusbar->SetStatusText(statusbar_fields[i], i);
    }
    flash_button->Enable(0);
    // end wxGlade
}


void MyFrame::do_layout()
{
    // begin wxGlade: MyFrame::do_layout
    wxBoxSizer* sizer_1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_4 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_2 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_3 = new wxStaticBoxSizer(new wxStaticBox(panel_1, wxID_ANY, wxT("Buffer Info")), wxVERTICAL);
    wxStaticBitmap* gglabs_bitmap = new wxStaticBitmap(panel_1, wxID_ANY, wxBITMAP_PNG_FROM_DATA(bin2c_gglabs_logo_300));
    sizer_2->Add(gglabs_bitmap, 1, wxALL, 6);
    sizer_3->Add(label_file, 0, wxALL, 8);
    sizer_3->Add(label_size, 0, wxALL, 8);
    sizer_3->Add(browse_button, 0, wxALIGN_CENTER|wxALL, 6);
    sizer_2->Add(sizer_3, 1, wxALL|wxEXPAND, 4);
    panel_1->SetSizer(sizer_2);
    sizer_1->Add(panel_1, 3, wxEXPAND, 0);
    sizer_4->Add(about_button, 1, wxALL|wxEXPAND, 6);
    sizer_4->Add(flash_button, 1, wxALL|wxEXPAND, 6);
    sizer_4->Add(exit_button, 1, wxALL|wxEXPAND, 6);
    panel_2->SetSizer(sizer_4);
    sizer_1->Add(panel_2, 1, wxEXPAND|wxFIXED_MINSIZE, 0);
    SetSizer(sizer_1);
    sizer_1->Fit(this);
    Layout();
    // end wxGlade
    timer->Start(1000);
}


BEGIN_EVENT_TABLE(MyFrame, wxFrame)
    // begin wxGlade: MyFrame::event_table
    EVT_BUTTON(4, MyFrame::OnBrowse)
    EVT_BUTTON(1, MyFrame::OnAbout)
    EVT_BUTTON(2, MyFrame::OnFlash)
    EVT_BUTTON(3, MyFrame::OnExit)
    // end wxGlade
    EVT_TIMER(10, MyFrame::OnTimer)
END_EVENT_TABLE();


void MyFrame::OnBrowse(wxCommandEvent &event)  // wxGlade: MyFrame.<event_handler>
{
  wxFileDialog loaddialog(this, wxT("Select a firmware file"),
			  wxT(""), wxT(""),
			  wxT("BIN files (*.bin)|*.bin|All files (*.*)|*.*"),
			  wxFD_OPEN);
  
    event.Skip();

    if(loaddialog.ShowModal() == wxID_OK) {
      wxString path=loaddialog.GetPath();
      wxFile file(path);
      

      fw_size=file.Read(fw_buf,FLASH_SIZE);

      if(fw_size==0) {
	wxMessageBox(wxT("Failed to load firmware file"),
		     wxT("Load Error"), wxOK|wxICON_ERROR);
      }
      if(fw_size>(FLASH_SIZE-1536)) {
	wxMessageBox(wxT("Firmware is too big for EFM8UB1"),
		     wxT("Load Error"), wxOK|wxICON_ERROR);
	fw_size=0;
      }
      
      if(fw_size) {
	label_file->SetLabel(wxString(wxT("File: "))<<loaddialog.GetFilename());
	label_size->SetLabel(wxString(wxT("Size: "))<<fw_size);
	if(efm8_found)
	  flash_button->Enable();
      } else {
	label_file->SetLabel(wxT("File: "));
	label_size->SetLabel(wxT("Size: "));
	flash_button->Disable();
      }
    }
}

void MyFrame::OnAbout(wxCommandEvent &event)  // wxGlade: MyFrame.<event_handler>
{
    event.Skip();

    wxAboutDialogInfo info;
    info.SetName(_("EFM8 Flash"));
    info.SetVersion(_("1.0"));
    info.SetDescription(_("Small GUI utility to flash Silicon Labs EFM8UB1 Microcontrollers."));
    info.SetCopyright(wxT("(C) 2020 Gabriele Gorla"));
     
    wxAboutBox(info);
    
}

void MyFrame::OnFlash(wxCommandEvent &event)  // wxGlade: MyFrame.<event_handler>
{
  int r;
  event.Skip();
  timer->Stop();

    r=efm8_flash(fw_buf,fw_size);
    if(r) {
      wxMessageBox(wxT("Flash Failed"),
		 wxT("Flash Failed code"),wxOK|wxICON_ERROR);
    } else
      statusbar->SetStatusText(wxT("Flash Successfull"),1);

    timer->Start();
}

void MyFrame::OnExit(wxCommandEvent &event)  // wxGlade: MyFrame.<event_handler>
{
    event.Skip();
    Close();
}

void MyFrame::OnTimer(wxTimerEvent &event)  // wxGlade: MyFrame.<event_handler>
{
    event.Skip();
    efm8_found=efm8_find();

    if(efm8_found) {
      statusbar->SetStatusText(wxT("Found EFM8"),0);
      statusbar->SetStatusText(wxEmptyString,1);
      if(fw_size) flash_button->Enable();
    } else {
      statusbar->SetStatusText(wxT("No EFM8 connected"),0);
      flash_button->Disable();
    }
}


// wxGlade: add MyFrame event handlers


class MyApp: public wxApp {
public:
    bool OnInit();
};

IMPLEMENT_APP(MyApp)

bool MyApp::OnInit()
{
    wxInitAllImageHandlers();
    MyFrame* frame = new MyFrame(NULL, wxID_ANY, wxEmptyString);
    SetTopWindow(frame);
    frame->Show();
    return true;
}
